buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.15'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
	id 'com.google.cloud.tools.jib' version '3.4.0'


}

group = 'com.codepresso'
version = '0.0.1-SNAPSHOT-1'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}
configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-freemarker'
	implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.6.12'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.postgresql:postgresql:42.6.0'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	// jwt
	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'
	runtimeOnly 'org.postgresql:postgresql'

	implementation "com.querydsl:querydsl-jpa:5.0.0"
	implementation "com.querydsl:querydsl-apt:5.0.0"
	implementation "com.querydsl:querydsl-core:5.0.0"

	//youtube api
	implementation 'com.google.api-client:google-api-client:1.23.0'
	implementation 'com.google.oauth-client:google-oauth-client-jetty:1.23.0'
	implementation 'com.google.apis:google-api-services-youtube:v3-rev222-1.25.0'

	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-web'


	//websocket
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	// sockjs
	implementation 'org.webjars:sockjs-client:1.5.1'
	// stomp
	implementation 'org.webjars:stomp-websocket:2.3.4'
	// gson
	implementation 'com.google.code.gson:gson:2.9.0'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()

}

tasks.withType(JavaCompile).configureEach {
	options.encoding = 'UTF-8'
}

jib {
	from {
		image = 'openjdk:17-alpine'
	}
	to {
		image = '767397724469.dkr.ecr.ap-northeast-2.amazonaws.com/musicdiary'
		credHelper = 'ecr-login'
		tags = [project.version]
	}
	container {
		jvmFlags = ['-Xms512m']
		format = 'OCI'
	}
}

//    querydsl
def querydslDir = "$buildDir/generated/querydsl"
querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}
sourceSets {
	main.java.srcDir querydslDir
}
configurations {
	querydsl.extendsFrom compileClasspath
}
compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}